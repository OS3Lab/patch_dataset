From 736d214fe2b1ad7cd9b57c05571b53628124668e Mon Sep 17 00:00:00 2001
From: Pavi Vetriselvan <pvselvan@umich.edu>
Date: Mon, 4 Mar 2019 14:00:18 -0500
Subject: [PATCH] SERVER-35636 renameCollectionForApplyOps checks for complete
 namespace

(cherry picked from commit 35c1b1f588f04926a958ad2fe4d9c59d79f81e8b)
---
 src/mongo/db/catalog/rename_collection.cpp      |  8 ++++++++
 src/mongo/db/catalog/rename_collection_test.cpp | 14 ++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/src/mongo/db/catalog/rename_collection.cpp b/src/mongo/db/catalog/rename_collection.cpp
index c4550272b20..0073084cb44 100644
--- a/src/mongo/db/catalog/rename_collection.cpp
+++ b/src/mongo/db/catalog/rename_collection.cpp
@@ -49,6 +49,7 @@
 #include "mongo/db/index/index_descriptor.h"
 #include "mongo/db/index_builder.h"
 #include "mongo/db/jsobj.h"
+#include "mongo/db/ops/insert.h"
 #include "mongo/db/repl/replication_coordinator_global.h"
 #include "mongo/db/s/collection_sharding_state.h"
 #include "mongo/db/service_context.h"
@@ -561,6 +562,13 @@ Status renameCollectionForApplyOps(OperationContext* opCtx,
         sourceNss = uiNss;
     }
 
+    // Check that the target namespace is in the correct form, "database.collection".
+    auto targetStatus = userAllowedWriteNS(targetNss);
+    if (!targetStatus.isOK()) {
+        return Status(targetStatus.code(),
+                      str::stream() << "error with target namespace: " << targetStatus.reason());
+    }
+
     OptionalCollectionUUID targetUUID;
     if (!ui.eoo())
         targetUUID = uassertStatusOK(UUID::parse(ui));
diff --git a/src/mongo/db/catalog/rename_collection_test.cpp b/src/mongo/db/catalog/rename_collection_test.cpp
index 060f377b0a8..50d59ce56ab 100644
--- a/src/mongo/db/catalog/rename_collection_test.cpp
+++ b/src/mongo/db/catalog/rename_collection_test.cpp
@@ -1117,4 +1117,18 @@ TEST_F(RenameCollectionTest, FailRenameCollectionFromUnreplicatedToReplicatedDB)
                   renameCollection(_opCtx.get(), sourceNss, targetNss, {}));
 }
 
+TEST_F(RenameCollectionTest,
+       RenameCollectionForApplyOpsReturnsInvalidNamespaceIfTargetNamespaceIsInvalid) {
+    _createCollection(_opCtx.get(), _sourceNss);
+    auto dbName = _sourceNss.db().toString();
+
+    // Create a namespace that is not in the form "database.collection".
+    NamespaceString invalidTargetNss("invalidNamespace");
+
+    auto cmd = BSON("renameCollection" << _sourceNss.ns() << "to" << invalidTargetNss.ns());
+
+    ASSERT_EQUALS(ErrorCodes::InvalidNamespace,
+                  renameCollectionForApplyOps(_opCtx.get(), dbName, {}, cmd, {}));
+}
+
 }  // namespace
-- 
2.34.1

